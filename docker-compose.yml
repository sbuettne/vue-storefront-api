version: '3.0'
services:
  es1:
    container_name: vsf-elasticsearch
    build: docker/elasticsearch/
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./docker/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
#    ports:
#      - '9200:9200'
#      - '9300:9300'
    environment:
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xmx512m -Xms512m"
    networks:
      - backend
    labels:
      traefik.enabled: "true"
      traefik.port: "8080"
      traefik.frontend.entryPoints: http,https
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.es.frontend.rule: Host:vsf-es-${HOSTNAME_DELIMITER:-.}${ENVIRONMENT_FQDN:-docker.localhost}

  kibana:
    container_name: vsf-kibana
    build: docker/kibana/
    volumes:
      - ./docker/kibana/config/:/usr/share/kibana/config:ro
#    ports:
#      - '5601:5601'
    depends_on:
      - es1
    networks:
      - backend
    labels:
      traefik.enabled: "true"
      traefik.port: "5601"
      traefik.frontend.entryPoints: http,https
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.kibana.frontend.rule: Host:vsf-kibana-${HOSTNAME_DELIMITER:-.}${ENVIRONMENT_FQDN:-docker.localhost}

  redis:
    container_name: vsf-redis
    image: 'redis:4-alpine'
    ports:
      - '6379:6379'
    networks:
      - backend
    labels:
      traefik.enabled: "true"
      traefik.port: "6379"
      traefik.frontend.entryPoints: http,https
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.redis.frontend.rule: Host:vsf-redis-${HOSTNAME_DELIMITER:-.}${ENVIRONMENT_FQDN:-docker.localhost}

networks:
  backend:
    driver: bridge

volumes:
  esdat1:
